/**
 * Generated by orval v7.3.0 üç∫
 * Do not edit manually.
 * OSI.Core
 * OpenAPI spec version: v1
 */
import { useMutation } from '@tanstack/react-query';
import type { MutationFunction, UseMutationOptions, UseMutationResult } from '@tanstack/react-query';
import type { PutApiJobsJobSendDbfToKazpostParams } from '.././models';
import { axiosForReactQueryInstance } from '../../reactQuery';
import type { ErrorType } from '../../reactQuery';

type SecondParameter<T extends (...args: any) => any> = Parameters<T>[1];

/**
 * @summary –û—Ç–ø—Ä–∞–≤–∫–∞ Dbf –ö–∞–∑–ø–æ—á—Ç–µ
 */
export const putApiJobsJobSendDbfToKazpost = (
  params?: PutApiJobsJobSendDbfToKazpostParams,
  options?: SecondParameter<typeof axiosForReactQueryInstance>
) => {
  return axiosForReactQueryInstance<void>({ url: `/api/Jobs/job-send-dbf-to-kazpost`, method: 'PUT', params }, options);
};

export const getPutApiJobsJobSendDbfToKazpostMutationOptions = <
  TError = ErrorType<unknown>,
  TContext = unknown
>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof putApiJobsJobSendDbfToKazpost>>,
    TError,
    { params?: PutApiJobsJobSendDbfToKazpostParams },
    TContext
  >;
  request?: SecondParameter<typeof axiosForReactQueryInstance>;
}): UseMutationOptions<
  Awaited<ReturnType<typeof putApiJobsJobSendDbfToKazpost>>,
  TError,
  { params?: PutApiJobsJobSendDbfToKazpostParams },
  TContext
> => {
  const { mutation: mutationOptions, request: requestOptions } = options ?? {};

  const mutationFn: MutationFunction<
    Awaited<ReturnType<typeof putApiJobsJobSendDbfToKazpost>>,
    { params?: PutApiJobsJobSendDbfToKazpostParams }
  > = (props) => {
    const { params } = props ?? {};

    return putApiJobsJobSendDbfToKazpost(params, requestOptions);
  };

  return { mutationFn, ...mutationOptions };
};

export type PutApiJobsJobSendDbfToKazpostMutationResult = NonNullable<
  Awaited<ReturnType<typeof putApiJobsJobSendDbfToKazpost>>
>;

export type PutApiJobsJobSendDbfToKazpostMutationError = ErrorType<unknown>;

/**
 * @summary –û—Ç–ø—Ä–∞–≤–∫–∞ Dbf –ö–∞–∑–ø–æ—á—Ç–µ
 */
export const usePutApiJobsJobSendDbfToKazpost = <TError = ErrorType<unknown>, TContext = unknown>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof putApiJobsJobSendDbfToKazpost>>,
    TError,
    { params?: PutApiJobsJobSendDbfToKazpostParams },
    TContext
  >;
  request?: SecondParameter<typeof axiosForReactQueryInstance>;
}): UseMutationResult<
  Awaited<ReturnType<typeof putApiJobsJobSendDbfToKazpost>>,
  TError,
  { params?: PutApiJobsJobSendDbfToKazpostParams },
  TContext
> => {
  const mutationOptions = getPutApiJobsJobSendDbfToKazpostMutationOptions(options);

  return useMutation(mutationOptions);
};
