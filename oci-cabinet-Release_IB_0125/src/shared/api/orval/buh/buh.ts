/**
 * Generated by orval v7.3.0 üç∫
 * Do not edit manually.
 * OSI.Core
 * OpenAPI spec version: v1
 */
import { useMutation } from '@tanstack/react-query';
import type { MutationFunction, UseMutationOptions, UseMutationResult } from '@tanstack/react-query';
import type {
  ApiResponse1SystemString,
  PutApiBuhCreateAccuralsInCustomPeriodParams,
  PutApiBuhCreateAccuralsParams,
  PutApiBuhCreateActsParams,
  PutApiBuhCreateEsfsParams
} from '.././models';
import { axiosForReactQueryInstance } from '../../reactQuery';
import type { ErrorType } from '../../reactQuery';

type SecondParameter<T extends (...args: any) => any> = Parameters<T>[1];

/**
 * @summary –°–¥–µ–ª–∞—Ç—å –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è –ø–æ –≤—Å–µ–º –ø–ª–∞–Ω–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–∏–π –Ω–∞ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å (—Ç–æ–ª—å–∫–æ –ø–æ —Ä–∞–±–æ—á–∏–º –û–°–ò)
 */
export const putApiBuhCreateAccurals = (
  params?: PutApiBuhCreateAccuralsParams,
  options?: SecondParameter<typeof axiosForReactQueryInstance>
) => {
  return axiosForReactQueryInstance<ApiResponse1SystemString>(
    { url: `/api/Buh/create-accurals`, method: 'PUT', params },
    options
  );
};

export const getPutApiBuhCreateAccuralsMutationOptions = <TError = ErrorType<unknown>, TContext = unknown>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof putApiBuhCreateAccurals>>,
    TError,
    { params?: PutApiBuhCreateAccuralsParams },
    TContext
  >;
  request?: SecondParameter<typeof axiosForReactQueryInstance>;
}): UseMutationOptions<
  Awaited<ReturnType<typeof putApiBuhCreateAccurals>>,
  TError,
  { params?: PutApiBuhCreateAccuralsParams },
  TContext
> => {
  const { mutation: mutationOptions, request: requestOptions } = options ?? {};

  const mutationFn: MutationFunction<
    Awaited<ReturnType<typeof putApiBuhCreateAccurals>>,
    { params?: PutApiBuhCreateAccuralsParams }
  > = (props) => {
    const { params } = props ?? {};

    return putApiBuhCreateAccurals(params, requestOptions);
  };

  return { mutationFn, ...mutationOptions };
};

export type PutApiBuhCreateAccuralsMutationResult = NonNullable<Awaited<ReturnType<typeof putApiBuhCreateAccurals>>>;

export type PutApiBuhCreateAccuralsMutationError = ErrorType<unknown>;

/**
 * @summary –°–¥–µ–ª–∞—Ç—å –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è –ø–æ –≤—Å–µ–º –ø–ª–∞–Ω–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–∏–π –Ω–∞ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å (—Ç–æ–ª—å–∫–æ –ø–æ —Ä–∞–±–æ—á–∏–º –û–°–ò)
 */
export const usePutApiBuhCreateAccurals = <TError = ErrorType<unknown>, TContext = unknown>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof putApiBuhCreateAccurals>>,
    TError,
    { params?: PutApiBuhCreateAccuralsParams },
    TContext
  >;
  request?: SecondParameter<typeof axiosForReactQueryInstance>;
}): UseMutationResult<
  Awaited<ReturnType<typeof putApiBuhCreateAccurals>>,
  TError,
  { params?: PutApiBuhCreateAccuralsParams },
  TContext
> => {
  const mutationOptions = getPutApiBuhCreateAccuralsMutationOptions(options);

  return useMutation(mutationOptions);
};
/**
 * @summary –°–¥–µ–ª–∞—Ç—å –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è –ø–æ –≤—Å–µ–º –ø–ª–∞–Ω–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–∏–π
 */
export const putApiBuhCreateAccuralsInCustomPeriod = (
  params?: PutApiBuhCreateAccuralsInCustomPeriodParams,
  options?: SecondParameter<typeof axiosForReactQueryInstance>
) => {
  return axiosForReactQueryInstance<ApiResponse1SystemString>(
    { url: `/api/Buh/create-accurals-in-custom-period`, method: 'PUT', params },
    options
  );
};

export const getPutApiBuhCreateAccuralsInCustomPeriodMutationOptions = <
  TError = ErrorType<unknown>,
  TContext = unknown
>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof putApiBuhCreateAccuralsInCustomPeriod>>,
    TError,
    { params?: PutApiBuhCreateAccuralsInCustomPeriodParams },
    TContext
  >;
  request?: SecondParameter<typeof axiosForReactQueryInstance>;
}): UseMutationOptions<
  Awaited<ReturnType<typeof putApiBuhCreateAccuralsInCustomPeriod>>,
  TError,
  { params?: PutApiBuhCreateAccuralsInCustomPeriodParams },
  TContext
> => {
  const { mutation: mutationOptions, request: requestOptions } = options ?? {};

  const mutationFn: MutationFunction<
    Awaited<ReturnType<typeof putApiBuhCreateAccuralsInCustomPeriod>>,
    { params?: PutApiBuhCreateAccuralsInCustomPeriodParams }
  > = (props) => {
    const { params } = props ?? {};

    return putApiBuhCreateAccuralsInCustomPeriod(params, requestOptions);
  };

  return { mutationFn, ...mutationOptions };
};

export type PutApiBuhCreateAccuralsInCustomPeriodMutationResult = NonNullable<
  Awaited<ReturnType<typeof putApiBuhCreateAccuralsInCustomPeriod>>
>;

export type PutApiBuhCreateAccuralsInCustomPeriodMutationError = ErrorType<unknown>;

/**
 * @summary –°–¥–µ–ª–∞—Ç—å –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è –ø–æ –≤—Å–µ–º –ø–ª–∞–Ω–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–∏–π
 */
export const usePutApiBuhCreateAccuralsInCustomPeriod = <TError = ErrorType<unknown>, TContext = unknown>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof putApiBuhCreateAccuralsInCustomPeriod>>,
    TError,
    { params?: PutApiBuhCreateAccuralsInCustomPeriodParams },
    TContext
  >;
  request?: SecondParameter<typeof axiosForReactQueryInstance>;
}): UseMutationResult<
  Awaited<ReturnType<typeof putApiBuhCreateAccuralsInCustomPeriod>>,
  TError,
  { params?: PutApiBuhCreateAccuralsInCustomPeriodParams },
  TContext
> => {
  const mutationOptions = getPutApiBuhCreateAccuralsInCustomPeriodMutationOptions(options);

  return useMutation(mutationOptions);
};
/**
 * @summary –°–¥–µ–ª–∞—Ç—å –∞–∫—Ç—ã –∑–∞ –≥–æ–¥ –∏ –º–µ—Å—è—Ü
 */
export const putApiBuhCreateActs = (
  params?: PutApiBuhCreateActsParams,
  options?: SecondParameter<typeof axiosForReactQueryInstance>
) => {
  return axiosForReactQueryInstance<ApiResponse1SystemString>(
    { url: `/api/Buh/create-acts`, method: 'PUT', params },
    options
  );
};

export const getPutApiBuhCreateActsMutationOptions = <TError = ErrorType<unknown>, TContext = unknown>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof putApiBuhCreateActs>>,
    TError,
    { params?: PutApiBuhCreateActsParams },
    TContext
  >;
  request?: SecondParameter<typeof axiosForReactQueryInstance>;
}): UseMutationOptions<
  Awaited<ReturnType<typeof putApiBuhCreateActs>>,
  TError,
  { params?: PutApiBuhCreateActsParams },
  TContext
> => {
  const { mutation: mutationOptions, request: requestOptions } = options ?? {};

  const mutationFn: MutationFunction<
    Awaited<ReturnType<typeof putApiBuhCreateActs>>,
    { params?: PutApiBuhCreateActsParams }
  > = (props) => {
    const { params } = props ?? {};

    return putApiBuhCreateActs(params, requestOptions);
  };

  return { mutationFn, ...mutationOptions };
};

export type PutApiBuhCreateActsMutationResult = NonNullable<Awaited<ReturnType<typeof putApiBuhCreateActs>>>;

export type PutApiBuhCreateActsMutationError = ErrorType<unknown>;

/**
 * @summary –°–¥–µ–ª–∞—Ç—å –∞–∫—Ç—ã –∑–∞ –≥–æ–¥ –∏ –º–µ—Å—è—Ü
 */
export const usePutApiBuhCreateActs = <TError = ErrorType<unknown>, TContext = unknown>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof putApiBuhCreateActs>>,
    TError,
    { params?: PutApiBuhCreateActsParams },
    TContext
  >;
  request?: SecondParameter<typeof axiosForReactQueryInstance>;
}): UseMutationResult<
  Awaited<ReturnType<typeof putApiBuhCreateActs>>,
  TError,
  { params?: PutApiBuhCreateActsParams },
  TContext
> => {
  const mutationOptions = getPutApiBuhCreateActsMutationOptions(options);

  return useMutation(mutationOptions);
};
/**
 * @summary –°–æ–∑–¥–∞—Ç—å –º–∞—Å—Å–æ–≤–æ –≠–°–§ –ø–æ –∞–∫—Ç–∞–º –∑–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–º –º–µ—Å—è—Ü
 */
export const putApiBuhCreateEsfs = (
  params?: PutApiBuhCreateEsfsParams,
  options?: SecondParameter<typeof axiosForReactQueryInstance>
) => {
  return axiosForReactQueryInstance<ApiResponse1SystemString>(
    { url: `/api/Buh/create-esfs`, method: 'PUT', params },
    options
  );
};

export const getPutApiBuhCreateEsfsMutationOptions = <TError = ErrorType<unknown>, TContext = unknown>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof putApiBuhCreateEsfs>>,
    TError,
    { params?: PutApiBuhCreateEsfsParams },
    TContext
  >;
  request?: SecondParameter<typeof axiosForReactQueryInstance>;
}): UseMutationOptions<
  Awaited<ReturnType<typeof putApiBuhCreateEsfs>>,
  TError,
  { params?: PutApiBuhCreateEsfsParams },
  TContext
> => {
  const { mutation: mutationOptions, request: requestOptions } = options ?? {};

  const mutationFn: MutationFunction<
    Awaited<ReturnType<typeof putApiBuhCreateEsfs>>,
    { params?: PutApiBuhCreateEsfsParams }
  > = (props) => {
    const { params } = props ?? {};

    return putApiBuhCreateEsfs(params, requestOptions);
  };

  return { mutationFn, ...mutationOptions };
};

export type PutApiBuhCreateEsfsMutationResult = NonNullable<Awaited<ReturnType<typeof putApiBuhCreateEsfs>>>;

export type PutApiBuhCreateEsfsMutationError = ErrorType<unknown>;

/**
 * @summary –°–æ–∑–¥–∞—Ç—å –º–∞—Å—Å–æ–≤–æ –≠–°–§ –ø–æ –∞–∫—Ç–∞–º –∑–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–º –º–µ—Å—è—Ü
 */
export const usePutApiBuhCreateEsfs = <TError = ErrorType<unknown>, TContext = unknown>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof putApiBuhCreateEsfs>>,
    TError,
    { params?: PutApiBuhCreateEsfsParams },
    TContext
  >;
  request?: SecondParameter<typeof axiosForReactQueryInstance>;
}): UseMutationResult<
  Awaited<ReturnType<typeof putApiBuhCreateEsfs>>,
  TError,
  { params?: PutApiBuhCreateEsfsParams },
  TContext
> => {
  const mutationOptions = getPutApiBuhCreateEsfsMutationOptions(options);

  return useMutation(mutationOptions);
};
